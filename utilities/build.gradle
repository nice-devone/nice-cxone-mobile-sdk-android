/*
 * Copyright (c) 2021-2024. NICE Ltd. All rights reserved.
 *
 * Licensed under the NICE License;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://github.com/nice-devone/nice-cxone-mobile-sdk-android/blob/main/LICENSE
 *
 * TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE CXONE MOBILE SDK IS PROVIDED ON
 * AN “AS IS” BASIS. NICE HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS, EXPRESS
 * OR IMPLIED, INCLUDING (WITHOUT LIMITATION) WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND TITLE.
 */

import com.vanniktech.maven.publish.AndroidMultiVariantLibrary

plugins {
    id "android-library-conventions"
    id "android-kotlin-conventions"
    id "android-docs-conventions"
    id "android-test-conventions"
    id "android-library-style-conventions"
    id "publish-conventions"
}

android {
    namespace 'com.nice.cxonechat.okhttp'

    defaultConfig {
        consumerProguardFiles "consumer-rules.pro"
        versionName version
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
    }

    sourceSets {
        main.java.srcDirs += "../utilities/src/main/java"
        test {
            resources {
                srcDirs "src/test/assets"
            }
        }
    }
}

// Setup publishing of all library variants.
// Dependant will get matching variant automatically (eg.: buildType:debug will get buildType:debug)
// Alternatively they can provide transformation mapping.
mavenPublishing {
    configure(new AndroidMultiVariantLibrary(true, true))
}
