plugins {
    id "android-application-conventions"
    id "android-ui-conventions"
    id "android-kotlin-conventions"
    id "ksp-conventions"
    id "koin-conventions"
    id "android-test-conventions"
    id "application-style-conventions"
    alias (libs.plugins.google.services)
    alias (libs.plugins.firebase.appdistribution)
    alias (libs.plugins.firebase.crashlytics)
}

def storeVersion = branchVersion(version, project)

android {
    namespace 'com.nice.cxonechat.sample'

    signingConfigs {
        debug {
            storeFile file('../keystore.jks')
            storePassword 'qwerty135'
            keyAlias 'key0'
            keyPassword 'qwerty135'
        }
        release {
            storeFile file('../keystore.jks')
            storePassword 'qwerty135'
            keyAlias 'key0'
            keyPassword 'qwerty135'
        }
    }

    defaultConfig {
        applicationId "com.nice.cxonechat.sample"
        versionCode 1
        versionName storeVersion

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            assets.srcDirs += rootProject.file("shared/assets")
            java.srcDirs += new File(buildDir, "generated/ksp/main/kotlin")
        }
    }

    firebaseAppDistribution {
        artifactType = "APK"
        releaseNotesFile = "CHANGELOG.md"
    }

    packagingOptions {
        dex {
            useLegacyPackaging false
        }
    }
}

/* remove the superfluous files that happen to live in the shared assets directory */
android.applicationVariants.all { variant ->
    def task = variant.getMergeAssetsProvider().get()

    task.doLast {
        delete(fileTree(dir: task.outputDir, includes: ['*.md', '*.scheme.json']))
    }
}

dependencies {
    implementation libs.retrofit
    implementation libs.retrofit.gson

    // Initializer<T>
    implementation libs.androidx.lifecycle.common
    implementation libs.androidx.startup

    // GoDaddy color picker
    implementation libs.colorpicker

    // Firebase
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.messaging

    // Extended Emoji Support
    implementation libs.androidx.emoji2
    implementation libs.androidx.emoji.bundled

    // AsyncImage
    implementation libs.coil.compose

    // CXOne Chat SDK
    implementation project(":chat-sdk-core")
    implementation project(":chat-sdk-ui")
    implementation project(':utilities')
    implementation project(':logger-android')

    // Crashlytics
    implementation(libs.firebase.crashlytics.ktx)

    // LoginWithAmazon
    implementation fileTree(include: ['*.jar', '*.aar'], dir: rootProject.file("libs"))

    // Immutable annotations
    implementation libs.findbugs
}
