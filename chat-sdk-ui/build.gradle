/*
 * Copyright (c) 2021-2025. NICE Ltd. All rights reserved.
 *
 * Licensed under the NICE License;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://github.com/nice-devone/nice-cxone-mobile-sdk-android/blob/main/LICENSE
 *
 * TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE CXONE MOBILE SDK IS PROVIDED ON
 * AN “AS IS” BASIS. NICE HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS, EXPRESS
 * OR IMPLIED, INCLUDING (WITHOUT LIMITATION) WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND TITLE.
 */

import com.vanniktech.maven.publish.AndroidMultiVariantLibrary

plugins {
    id "android-library-conventions"
    id "android-ui-conventions"
    id "android-kotlin-conventions"
    id "ksp-conventions"
    id "koin-conventions"
    id "android-test-conventions"
    id "android-library-style-conventions"
    id 'androidx.navigation.safeargs.kotlin'
    id "org.jetbrains.kotlin.plugin.serialization"
    id "publish-conventions"
}

android {
    namespace 'com.nice.cxonechat.ui'

    defaultConfig {
        versionName version
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs += new File(buildDir, "generated/ksp/main/kotlin")
        }
    }

    testOptions {
        unitTests {
            it.includeAndroidResources = true
        }
    }
}

// Setup publishing of all library variants.
// Dependent will get matching variant automatically (eg.: buildType:debug will get buildType:debug)
// Alternatively they can provide transformation mapping.
mavenPublishing {
    configure(new AndroidMultiVariantLibrary(true, true))
}

dependencies {
    // Chat Activity is public API
    api libs.androidx.compose.activity
    api libs.koin.android
    // Handling of push notification sent via FCM
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.messaging
    // Lifecycle-process is used to suppress push notifications when app is in foreground
    implementation libs.androidx.lifecycle

    // Async Image & Video Frame
    implementation libs.coil.compose
    implementation libs.coil.network
    implementation libs.coil.video

    // Zoomable composable elements like Image & AsyncImage
    implementation libs.zoomable

    // Multimedia message playback
    implementation libs.androidx.compose.animation
    implementation libs.media.exoplayer
    implementation libs.media.exoplayer.hls
    implementation libs.media.datasource.okhttp
    implementation libs.media.ui

    // CXone Chat SDK
    api project(":chat-sdk-core")
    api project(":logger")
    implementation project(":logger-android")
    implementation project(':utilities')

    // Immutable annotations
    implementation libs.findbugs

    // Kotlinx serialization
    implementation libs.kotlinx.serialization.json

    // Jetpack Compose - 1.8.0-alpha
    implementation libs.androidx.compose.foundation

    // Emoji support
    implementation libs.androidx.emoji2
    testImplementation("org.robolectric:robolectric:4.15.1")
    testImplementation libs.androidx.emoji.bundled
}
